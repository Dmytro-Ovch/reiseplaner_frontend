import{r as C,bY as H,ld as J,A as i,B as s,bp as P,ga as G,bM as b,le as Y,F as _,c6 as A,cF as D,c8 as L,cC as B,lf as U,H as k,cO as I,dG as q,cD as K,bT as E,fn as Q,fq as W,fr as X,J as Z}from"./index-QkvpMIk7.js";import{c as ee,b as te}from"./featureReferenceUtils-B88dcW3G.js";import{l as ie}from"./Analysis-BXB99rT8.js";import"./sphere-C0AiRlgs.js";import"./mat3f64-B5o_lm6j.js";import"./vectorStacks-CaX-bvv_.js";import"./mat4f64-q_b6UJoq.js";import"./quatf64-aQ5IuZRd.js";import"./IntersectorType-gQim6TH1.js";let a=class extends C.JSONSupportMixin(H){constructor(e){super(e),this.observer=null,this.farDistance=1e3,this.heading=0,this.tilt=90,this.horizontalFieldOfView=45,this.verticalFieldOfView=45,this.feature=null}get valid(){return this.observer!=null&&this.farDistance>0}equals(e){return J(this.observer,e.observer)&&this.farDistance===e.farDistance&&this.heading===e.heading&&this.tilt===e.tilt&&this.horizontalFieldOfView===e.horizontalFieldOfView&&this.verticalFieldOfView===e.verticalFieldOfView&&ee(this.feature,e.feature)}};i([s({type:P,json:{write:{isRequired:!0}}})],a.prototype,"observer",void 0),i([s({type:Number,nonNullable:!0,range:{min:0},json:{write:{isRequired:!0}}})],a.prototype,"farDistance",void 0),i([s({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}}),G((e=>b.normalize(Y(e),void 0,!0)))],a.prototype,"heading",void 0),i([s({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],a.prototype,"tilt",void 0),i([s({type:Number,nonNullable:!0,range:{min:0,max:360},json:{write:{isRequired:!0}}})],a.prototype,"horizontalFieldOfView",void 0),i([s({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],a.prototype,"verticalFieldOfView",void 0),i([s(te)],a.prototype,"feature",void 0),i([s({readOnly:!0,json:{read:!1}})],a.prototype,"valid",null),a=i([_("esri.analysis.Viewshed")],a);const F=L.ofType(a);let l=class extends ie{constructor(t){super(t),this.type="viewshed",this._extent=null}initialize(){this.addHandles(A((()=>this._computeExtent()),(t=>{t.pending==null&&(this._extent=t.extent)}),D))}get viewsheds(){return this._get("viewsheds")||new F}set viewsheds(t){this._set("viewsheds",B(t,this.viewsheds,F))}get spatialReference(){for(const t of this.viewsheds)if(t.observer!=null)return t.observer.spatialReference;return null}get extent(){return this._extent}get valid(){return this.viewsheds.every((t=>t.valid))}async waitComputeExtent(){const t=this._computeExtent();t.pending!=null&&await t.pending}_computeExtent(){const{spatialReference:t}=this;if(t==null)return{pending:null,extent:null};const u=this.viewsheds.filter((r=>r.observer!=null)),d=u.map((r=>r.observer)).toArray(),p=U(d,t);return p.pending!=null?{pending:p.pending,extent:null}:{pending:null,extent:p.geometries.map(((r,h)=>{const O=u.at(h);return r!=null&&O!=null?this._computeViewshedExtent(this.viewsheds.at(h),r):null})).filter((r=>r!=null)).reduce(((r,h)=>se(r,h)),null)}}_computeViewshedExtent(t,u){const{farDistance:d,heading:p,tilt:r,horizontalFieldOfView:h,verticalFieldOfView:O}=t,{spatialReference:m}=u,V=h/2,$=O/2,z=d/m.metersPerUnit,T=[b.normalize(p-V),p,b.normalize(p+V)],c=k.fromPoint(u),g=v=>{const y=T.map((o=>b.normalize(o-v)));if(y[0]>y[2]||h===360)return z;const w=y.map((o=>Math.abs(o>180?360-o:o))).reduce(((o,x)=>o>x?x:o));return w>90?0:z*Math.cos(q(w))};c.xmax+=g(90),c.xmin-=g(-90),c.ymax+=g(0),c.ymin-=g(180);const f=u.z;if(f!=null){let v=f,y=f;const w=r-90,o=E(w+$,-90,90),x=E(w-$,-90,90),R=m!=null&&m.isGeographic?d:z;v+=R*N(o),y+=R*N(x);const S=M($)*R,j=N(w)*S*(1-M(V));r<90&&(v-=j),r>90&&(y-=j),c.zmax=Math.max(v,f),c.zmin=Math.min(y,f)}return c}equals(t){return this===t||super.equals(t)&&I(this.viewsheds.toArray(),t.viewsheds.toArray(),((u,d)=>u.equals(d)))}clear(){this.viewsheds.removeAll()}};function se(e,t){return e==null?t:t==null?e:e.union(t)}function M(e){return Math.cos(q(e))}function N(e){return Math.sin(q(e))}i([s({type:["viewshed"]})],l.prototype,"type",void 0),i([s({cast:K,type:F,nonNullable:!0})],l.prototype,"viewsheds",null),i([s({readOnly:!0})],l.prototype,"spatialReference",null),i([s()],l.prototype,"_extent",void 0),i([s()],l.prototype,"extent",null),i([s({readOnly:!0})],l.prototype,"valid",null),l=i([_("esri.analysis.ViewshedAnalysis")],l);let n=class extends Q(W(X)){constructor(e){super(e),this.type="viewshed",this.operationalLayerType="ViewshedLayer",this.source=new l,this.opacity=1}initialize(){this.addHandles(A((()=>this.source),((e,t)=>{t!=null&&t.parent===this&&(t.parent=null),e!=null&&(e.parent=this)}),D))}async load(){return this.addResolvingPromise(this.source.waitComputeExtent()),this}get spatialReference(){return this.source.spatialReference}get fullExtent(){return this.source.extent}releaseAnalysis(e){this.source===e&&(this.source=new l)}get analysis(){return this.source}set analysis(e){this.source=e}get viewsheds(){return this.source.viewsheds}set viewsheds(e){this.source.viewsheds=e}writeViewsheds(e,t,u,d){t.viewsheds=e.filter((p=>p.valid)).toJSON(d)}};i([s({json:{read:!1},readOnly:!0})],n.prototype,"type",void 0),i([s({type:["ViewshedLayer"]})],n.prototype,"operationalLayerType",void 0),i([s({type:l,nonNullable:!0})],n.prototype,"source",void 0),i([s({readOnly:!0})],n.prototype,"spatialReference",null),i([s({readOnly:!0})],n.prototype,"fullExtent",null),i([s({readOnly:!0,json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],n.prototype,"opacity",void 0),i([s({type:["show","hide"]})],n.prototype,"listMode",void 0),i([s({type:L.ofType(a),json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{ignoreOrigin:!0}}}}})],n.prototype,"viewsheds",null),i([Z("web-scene","viewsheds")],n.prototype,"writeViewsheds",null),n=i([_("esri.layers.ViewshedLayer")],n);const ye=n;export{ye as default};
