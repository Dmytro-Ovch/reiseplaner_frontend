import{fA as y,fn as h,fo as m,fp as f,fq as c,fB as u,fC as v,bV as g,fE as S,fD as w,ad as _,s as a,aa as n,fr as T,A as i,B as o,fI as I,bj as L,fJ as b,F as x}from"./index-QkvpMIk7.js";import{R as $,V as p}from"./SceneService-_Y8tCUiY.js";import{p as A,a as O,y as M,m as V}from"./I3SLayerDefinitions-CnEUQ9r_.js";import{n as l}from"./SceneModifications-QdwPb7WI.js";import{$ as d,Z as D,w as E}from"./elevationInfoUtils-CT-msSQr.js";import"./originUtils-CmavecP1.js";import"./resourceUtils-CAXY1SqC.js";import"./resourceUtils-CVNSN7md.js";import"./saveUtils-BEzN3pju.js";let t=class extends $(y(h(m(f(c(u(v(T)))))))){constructor(...e){super(...e),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this.path=null,this.definitionExpression=null}initialize(){this.addHandles(g((()=>this.modifications),"after-changes",(()=>this.modifications=this.modifications),S))}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}readModifications(e,r,s){this._modificationsSource={url:w(e,s),context:s}}set elevationInfo(e){e!=null&&e.mode!=="absolute-height"||this._set("elevationInfo",e),this._validateElevationInfo(e)}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const r=e==null?void 0:e.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(s){_(s)}if(await this._fetchService(r),this._modificationsSource!=null){const s=await l.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",s,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,r)}beforeSave(){if(this._modificationsSource!=null)return this.load().then((()=>{}),(()=>{}))}async saveAs(e,r){return this._debouncedSaveOperations(p.SAVE_AS,{...r,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(p.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new a("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new a("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new a("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(e){const r="Integrated mesh layers";d(n.getLogger(this),D(r,"absolute-height",e)),d(n.getLogger(this),E(r,e))}};i([o({type:String,readOnly:!0})],t.prototype,"geometryType",void 0),i([o({type:["show","hide"]})],t.prototype,"listMode",void 0),i([o({type:["IntegratedMeshLayer"]})],t.prototype,"operationalLayerType",void 0),i([o({json:{read:!1},readOnly:!0})],t.prototype,"type",void 0),i([o({type:A,readOnly:!0})],t.prototype,"nodePages",void 0),i([o({type:[O],readOnly:!0})],t.prototype,"materialDefinitions",void 0),i([o({type:[M],readOnly:!0})],t.prototype,"textureSetDefinitions",void 0),i([o({type:[V],readOnly:!0})],t.prototype,"geometryDefinitions",void 0),i([o({readOnly:!0})],t.prototype,"serviceUpdateTimeStamp",void 0),i([o({type:l,clonable:e=>e.clone()}),I({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],t.prototype,"modifications",void 0),i([L(["web-scene","portal-item"],"modifications")],t.prototype,"readModifications",null),i([o(b)],t.prototype,"elevationInfo",null),i([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],t.prototype,"path",void 0),t=i([x("esri.layers.IntegratedMeshLayer")],t);const F=t;export{F as default};
